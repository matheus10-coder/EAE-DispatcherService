mappoFacilityOtherA = SELECT IV.SCCF_ID, \
						IV.CLM_TP_CD, IV.INP_SUB_ID, IV.HOST_PLAN_CNTL_ID, IV.TOT_CHG_AMT, IV.BILL_TP_CD, IV.FED_TAX_ID, \
						IV.PROV_ST_CD, IV.PROV_ZIP_CD, IV.PERF_PROV_TXNMY_CD, IV.PROV_NPI_CD, IV.PAT_SEX_CD, \
						VARCHAR_FORMAT(IV.PAT_BRTH_DT, 'MM/DD/YYYY') AS PAT_BRTH_DT, IV.ADMIT_TP_CD, IV.ADMIT_SRC_CD, \
						VARCHAR_FORMAT(IV.ADMIT_DT, 'MM/DD/YYYY') AS ADMIT_DT, CASE WHEN IV.ADMIT_HR_NUM < '0' THEN NULL \
						ELSE IV.ADMIT_HR_NUM END AS ADMIT_HR_NUM, CASE WHEN IV.DISCHRG_HR_NUM < '0' THEN NULL \
						ELSE IV.DISCHRG_HR_NUM END AS DISCHRG_HR_NUM, VARCHAR_FORMAT(IV.STMT_COV_FROM_DT, 'MM/DD/YYYY') \
						AS STMT_COV_FROM_DT, VARCHAR_FORMAT(IV.STMT_COV_TO_DT, 'MM/DD/YYYY') AS STMT_COV_TO_DT, \
						IV.PAT_STS_CD, CASE WHEN IV.VAL_CD_1 = 'A0' THEN LPAD (IV.VAL_AMT_1, 5, '0') WHEN IV.VAL_CD_2 = 'A0' \
						THEN LPAD (IV.VAL_AMT_2, 5, '0') WHEN IV.VAL_CD_3 = 'A0' THEN LPAD (IV.VAL_AMT_3, 5, '0') \
						WHEN IV.VAL_CD_4 = 'A0' THEN LPAD (IV.VAL_AMT_4, 5, '0') WHEN IV.VAL_CD_5 = 'A0' \
						THEN LPAD (IV.VAL_AMT_5, 5, '0') ELSE NULL END AS AMB_PICKUP_ZIP_CD, IV.COND_CD_1, IV.COND_CD_2, \
						IV.COND_CD_3, IV.COND_CD_4, IV.COND_CD_5, IV.VAL_CD_1, IV.VAL_CD_2, IV.VAL_CD_3, IV.VAL_CD_4, \
						IV.VAL_CD_5, IV.VAL_AMT_1, IV.VAL_AMT_2, IV.VAL_AMT_3, IV.VAL_AMT_4, IV.VAL_AMT_5, IV.OCCR_SPAN_CD_1, \
						IV.OCCR_SPAN_CD_2, IV.OCCR_SPAN_CD_3, IV.OCCR_SPAN_CD_4, IV.OCCR_SPAN_CD_5, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_1, 'MM/DD/YYYY') AS OCCR_FROM_DT_1, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_2, 'MM/DD/YYYY') AS OCCR_FROM_DT_2, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_3, 'MM/DD/YYYY') AS OCCR_FROM_DT_3, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_4, 'MM/DD/YYYY') AS OCCR_FROM_DT_4, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_5, 'MM/DD/YYYY') AS OCCR_FROM_DT_5, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_1, 'MM/DD/YYYY') AS OCCR_TO_DT_1, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_2, 'MM/DD/YYYY') AS OCCR_TO_DT_2, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_3, 'MM/DD/YYYY') AS OCCR_TO_DT_3, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_4, 'MM/DD/YYYY') AS OCCR_TO_DT_4, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_5, 'MM/DD/YYYY') AS OCCR_TO_DT_5, IV.OCCR_CD_1, IV.OCCR_CD_2, \
						IV.OCCR_CD_3, IV.OCCR_CD_4, IV.OCCR_CD_5, VARCHAR_FORMAT(IV.OCCR_DT_1, 'MM/DD/YYYY') AS OCCR_DT_1, \
						VARCHAR_FORMAT(IV.OCCR_DT_2, 'MM/DD/YYYY') AS OCCR_DT_2, VARCHAR_FORMAT(IV.OCCR_DT_3, 'MM/DD/YYYY') \
						AS OCCR_DT_3, VARCHAR_FORMAT(IV.OCCR_DT_4, 'MM/DD/YYYY') AS OCCR_DT_4, \
						VARCHAR_FORMAT(IV.OCCR_DT_5, 'MM/DD/YYYY') AS OCCR_DT_5, IV.ICD_10_PAT_RSN_VIS_CD_1, \
						IV.ICD_10_PAT_RSN_VIS_CD_2, IV.ICD_10_PAT_RSN_VIS_CD_3, IV.ICD_10_PROC_CD_1, IV.ICD_10_PROC_CD_2, \
						IV.ICD_10_PROC_CD_3, IV.ICD_10_PROC_CD_4, IV.ICD_10_PROC_CD_5, IV.ICD_10_PROC_CD_6, \
						IV.ICD_10_PROC_CD_7, IV.ICD_10_PROC_CD_8, IV.ICD_10_PROC_CD_9, IV.ICD_10_PROC_CD_10, \
						IV.ICD_10_PROC_CD_11, IV.ICD_10_PROC_CD_12, IV.ICD_10_PROC_CD_13, IV.ICD_10_PROC_CD_14, \
						IV.ICD_10_PROC_CD_15, IV.ICD_10_PROC_CD_16, IV.ICD_10_PROC_CD_17, IV.ICD_10_PROC_CD_18, \
						IV.ICD_10_PROC_CD_19, IV.ICD_10_PROC_CD_20, IV.ICD_10_PROC_CD_21, IV.ICD_10_PROC_CD_22, \
						IV.ICD_10_PROC_CD_23, IV.ICD_10_PROC_CD_24, VARCHAR_FORMAT(IV.PROC_DT_1, 'MM/DD/YYYY') \
						AS PROC_DT_1, VARCHAR_FORMAT(IV.PROC_DT_2, 'MM/DD/YYYY') AS PROC_DT_2, \
						VARCHAR_FORMAT(IV.PROC_DT_3, 'MM/DD/YYYY') AS PROC_DT_3, VARCHAR_FORMAT(IV.PROC_DT_4, 'MM/DD/YYYY') \
						AS PROC_DT_4, VARCHAR_FORMAT(IV.PROC_DT_5, 'MM/DD/YYYY') AS PROC_DT_5, \
						VARCHAR_FORMAT(IV.PROC_DT_6, 'MM/DD/YYYY') AS PROC_DT_6, VARCHAR_FORMAT(IV.PROC_DT_7, 'MM/DD/YYYY') \
						AS PROC_DT_7, VARCHAR_FORMAT(IV.PROC_DT_8, 'MM/DD/YYYY') AS PROC_DT_8, \
						VARCHAR_FORMAT(IV.PROC_DT_9, 'MM/DD/YYYY') AS PROC_DT_9, VARCHAR_FORMAT(IV.PROC_DT_10, 'MM/DD/YYYY') \
						AS PROC_DT_10, VARCHAR_FORMAT(IV.PROC_DT_11, 'MM/DD/YYYY') AS PROC_DT_11, \
						VARCHAR_FORMAT(IV.PROC_DT_12, 'MM/DD/YYYY') AS PROC_DT_12, \
						VARCHAR_FORMAT(IV.PROC_DT_13, 'MM/DD/YYYY') AS PROC_DT_13, VARCHAR_FORMAT(IV.PROC_DT_14, 'MM/DD/YYYY') \
						AS PROC_DT_14, VARCHAR_FORMAT(IV.PROC_DT_15, 'MM/DD/YYYY') AS PROC_DT_15, \
						VARCHAR_FORMAT(IV.PROC_DT_16, 'MM/DD/YYYY') AS PROC_DT_16, \
						VARCHAR_FORMAT(IV.PROC_DT_17, 'MM/DD/YYYY') AS PROC_DT_17, \
						VARCHAR_FORMAT(IV.PROC_DT_18, 'MM/DD/YYYY') AS PROC_DT_18, \
						VARCHAR_FORMAT(IV.PROC_DT_19, 'MM/DD/YYYY') AS PROC_DT_19, \
						VARCHAR_FORMAT(IV.PROC_DT_20, 'MM/DD/YYYY') AS PROC_DT_20, \
						VARCHAR_FORMAT(IV.PROC_DT_21, 'MM/DD/YYYY') AS PROC_DT_21, \
						VARCHAR_FORMAT(IV.PROC_DT_22, 'MM/DD/YYYY') AS PROC_DT_22, \
						VARCHAR_FORMAT(IV.PROC_DT_23, 'MM/DD/YYYY') AS PROC_DT_23, \
						VARCHAR_FORMAT(IV.PROC_DT_24, 'MM/DD/YYYY') AS PROC_DT_24, IV.ICD_10_PRINC_PROC_CD, \
						VARCHAR_FORMAT(IV.PRINC_PROC_DT, 'MM/DD/YYYY') AS PRINC_PROC_DT, IV.PRINC_DIAG_POA_CD, \
						IV.DIAG_POA_CD_1, IV.DIAG_POA_CD_2, IV.DIAG_POA_CD_3, IV.DIAG_POA_CD_4, IV.DIAG_POA_CD_5, \
						IV.DIAG_POA_CD_6, IV.DIAG_POA_CD_7, IV.DIAG_POA_CD_8, IV.DIAG_POA_CD_9, IV.DIAG_POA_CD_10, \
						IV.DIAG_POA_CD_11, IV.DIAG_POA_CD_12, IV.DIAG_POA_CD_13, IV.DIAG_POA_CD_14, IV.DIAG_POA_CD_15, \
						IV.DIAG_POA_CD_16, IV.DIAG_POA_CD_17, IV.DIAG_POA_CD_18, IV.DIAG_POA_CD_19, IV.DIAG_POA_CD_20, \
						IV.DIAG_POA_CD_21, IV.DIAG_POA_CD_22, IV.DIAG_POA_CD_23, IV.DIAG_POA_CD_24, IV.ICD_10_ADMIT_DIAG_CD, \
						IV.ICD_10_PRINC_DIAG_CD, IV.ICD_10_DIAG_CD_1, IV.ICD_10_DIAG_CD_2, IV.ICD_10_DIAG_CD_3, \
						IV.ICD_10_DIAG_CD_4, IV.ICD_10_DIAG_CD_5, IV.ICD_10_DIAG_CD_6, IV.ICD_10_DIAG_CD_7, \
						IV.ICD_10_DIAG_CD_8, IV.ICD_10_DIAG_CD_9, IV.ICD_10_DIAG_CD_10, IV.ICD_10_DIAG_CD_11, \
						IV.ICD_10_DIAG_CD_12, IV.ICD_10_DIAG_CD_13, IV.ICD_10_DIAG_CD_14, IV.ICD_10_DIAG_CD_15, \
						IV.ICD_10_DIAG_CD_16, IV.ICD_10_DIAG_CD_17, IV.ICD_10_DIAG_CD_18, IV.ICD_10_DIAG_CD_19, \
						IV.ICD_10_DIAG_CD_20, IV.ICD_10_DIAG_CD_21, IV.ICD_10_DIAG_CD_22, IV.ICD_10_DIAG_CD_23, \
						IV.ICD_10_DIAG_CD_24, IVL.LN_NUM, LPAD (IVL.HCPCS_PROC_CD, 5, '0') AS HCPCS_PROC_CD, \
						IVL.HCPCS_PROCMOD_CD_1, IVL.HCPCS_PROCMOD_CD_2, IVL.HCPCS_PROCMOD_CD_3, IVL.HCPCS_PROCMOD_CD_4, \
						IVL.SERV_NUM, VARCHAR_FORMAT(IVL.SERV_START_DT, 'MM/DD/YYYY') AS SERV_START_DT, IVL.SERV_CHG_AMT, \
						IVL.NDC_CD, IVL.REV_CD, \
						CASE WHEN IV.PERF_PROV_TXNMY_CD = '261QE0700X' THEN 'TRUE' \
						ELSE 'FALSE' \
						END AS DaVita \
						FROM\u0020

mappoFacilityOtherB = ITS.IPP_SF_INST_V IV,\u0020

mappoFacilityOtherC = ITS.IPP_SF_LN_INST_V IVL \
						WHERE IV.SCCF_ID = IVL.SCCF_ID AND IV.BUS_OWNER_ID = IVL.BUS_OWNER_ID \
						AND IV.CLM_TP_CD = IVL.CLM_TP_CD AND IV.BUS_OWNER_ID = 'AR01' AND IVL.REV_CD <> '0001' \
						AND (IV.HOST_PLAN_RCPT_DT = CURRENT DATE - 1 DAY) AND ( ERR_CD_1 = '00MAP' OR ERR_CD_2 = '00MAP' \
						OR ERR_CD_3 = '00MAP' OR ERR_CD_4 = '00MAP' OR ERR_CD_5 = '00MAP' ) \
						ORDER BY IV.HOST_PLAN_RCPT_DT ASC, IV.SCCF_ID, IVL.LN_NUM \
						FOR FETCH ONLY WITH UR
						
mappoFacilityMondayA = SELECT IV.SCCF_ID, \
						IV.CLM_TP_CD, IV.INP_SUB_ID, IV.HOST_PLAN_CNTL_ID, IV.TOT_CHG_AMT, IV.BILL_TP_CD, \
						IV.FED_TAX_ID, IV.PROV_ST_CD, IV.PROV_ZIP_CD, IV.PERF_PROV_TXNMY_CD, IV.PROV_NPI_CD, \
						IV.PAT_SEX_CD, VARCHAR_FORMAT(IV.PAT_BRTH_DT, 'MM/DD/YYYY') AS PAT_BRTH_DT, IV.ADMIT_TP_CD, \
						IV.ADMIT_SRC_CD, VARCHAR_FORMAT(IV.ADMIT_DT, 'MM/DD/YYYY') AS ADMIT_DT, CASE \
						WHEN IV.ADMIT_HR_NUM < '0' THEN NULL ELSE IV.ADMIT_HR_NUM END AS ADMIT_HR_NUM, CASE \
						WHEN IV.DISCHRG_HR_NUM < '0' THEN NULL ELSE IV.DISCHRG_HR_NUM END AS DISCHRG_HR_NUM, \
						VARCHAR_FORMAT(IV.STMT_COV_FROM_DT, 'MM/DD/YYYY') AS STMT_COV_FROM_DT, \
						VARCHAR_FORMAT(IV.STMT_COV_TO_DT, 'MM/DD/YYYY') AS STMT_COV_TO_DT, IV.PAT_STS_CD, CASE \
						WHEN IV.VAL_CD_1 = 'A0' THEN LPAD (IV.VAL_AMT_1, 5, '0') WHEN IV.VAL_CD_2 = 'A0' THEN \
						LPAD (IV.VAL_AMT_2, 5, '0') WHEN IV.VAL_CD_3 = 'A0' THEN LPAD (IV.VAL_AMT_3, 5, '0') \
						WHEN IV.VAL_CD_4 = 'A0' THEN LPAD (IV.VAL_AMT_4, 5, '0') WHEN IV.VAL_CD_5 = 'A0' THEN \
						LPAD (IV.VAL_AMT_5, 5, '0') ELSE NULL END AS AMB_PICKUP_ZIP_CD, IV.COND_CD_1, IV.COND_CD_2, \
						IV.COND_CD_3, IV.COND_CD_4, IV.COND_CD_5, IV.VAL_CD_1, IV.VAL_CD_2, IV.VAL_CD_3, IV.VAL_CD_4, \
						IV.VAL_CD_5, IV.VAL_AMT_1, IV.VAL_AMT_2, IV.VAL_AMT_3, IV.VAL_AMT_4, IV.VAL_AMT_5, \
						IV.OCCR_SPAN_CD_1, IV.OCCR_SPAN_CD_2, IV.OCCR_SPAN_CD_3, IV.OCCR_SPAN_CD_4, IV.OCCR_SPAN_CD_5, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_1, 'MM/DD/YYYY') AS OCCR_FROM_DT_1, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_2, 'MM/DD/YYYY') AS OCCR_FROM_DT_2, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_3, 'MM/DD/YYYY') AS OCCR_FROM_DT_3, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_4, 'MM/DD/YYYY') AS OCCR_FROM_DT_4, \
						VARCHAR_FORMAT(IV.OCCR_FROM_DT_5, 'MM/DD/YYYY') AS OCCR_FROM_DT_5, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_1, 'MM/DD/YYYY') AS OCCR_TO_DT_1, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_2, 'MM/DD/YYYY') AS OCCR_TO_DT_2, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_3, 'MM/DD/YYYY') AS OCCR_TO_DT_3, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_4, 'MM/DD/YYYY') AS OCCR_TO_DT_4, \
						VARCHAR_FORMAT(IV.OCCR_TO_DT_5, 'MM/DD/YYYY') AS OCCR_TO_DT_5, IV.OCCR_CD_1, IV.OCCR_CD_2, \
						IV.OCCR_CD_3, IV.OCCR_CD_4, IV.OCCR_CD_5, VARCHAR_FORMAT(IV.OCCR_DT_1, 'MM/DD/YYYY') AS OCCR_DT_1, \
						VARCHAR_FORMAT(IV.OCCR_DT_2, 'MM/DD/YYYY') AS OCCR_DT_2, VARCHAR_FORMAT(IV.OCCR_DT_3, 'MM/DD/YYYY') \
						AS OCCR_DT_3, VARCHAR_FORMAT(IV.OCCR_DT_4, 'MM/DD/YYYY') AS OCCR_DT_4, \
						VARCHAR_FORMAT(IV.OCCR_DT_5, 'MM/DD/YYYY') AS OCCR_DT_5, IV.ICD_10_PAT_RSN_VIS_CD_1, \
						IV.ICD_10_PAT_RSN_VIS_CD_2, IV.ICD_10_PAT_RSN_VIS_CD_3, IV.ICD_10_PROC_CD_1, IV.ICD_10_PROC_CD_2, \
						IV.ICD_10_PROC_CD_3, IV.ICD_10_PROC_CD_4, IV.ICD_10_PROC_CD_5, IV.ICD_10_PROC_CD_6, \
						IV.ICD_10_PROC_CD_7, IV.ICD_10_PROC_CD_8, IV.ICD_10_PROC_CD_9, IV.ICD_10_PROC_CD_10, \
						IV.ICD_10_PROC_CD_11, IV.ICD_10_PROC_CD_12, IV.ICD_10_PROC_CD_13, IV.ICD_10_PROC_CD_14, \
						IV.ICD_10_PROC_CD_15, IV.ICD_10_PROC_CD_16, IV.ICD_10_PROC_CD_17, IV.ICD_10_PROC_CD_18, \
						IV.ICD_10_PROC_CD_19, IV.ICD_10_PROC_CD_20, IV.ICD_10_PROC_CD_21, IV.ICD_10_PROC_CD_22, \
						IV.ICD_10_PROC_CD_23, IV.ICD_10_PROC_CD_24, VARCHAR_FORMAT(IV.PROC_DT_1, 'MM/DD/YYYY') \
						AS PROC_DT_1, VARCHAR_FORMAT(IV.PROC_DT_2, 'MM/DD/YYYY') AS PROC_DT_2, \
						VARCHAR_FORMAT(IV.PROC_DT_3, 'MM/DD/YYYY') AS PROC_DT_3, \
						VARCHAR_FORMAT(IV.PROC_DT_4, 'MM/DD/YYYY') AS PROC_DT_4, \
						VARCHAR_FORMAT(IV.PROC_DT_5, 'MM/DD/YYYY') AS PROC_DT_5, \
						VARCHAR_FORMAT(IV.PROC_DT_6, 'MM/DD/YYYY') AS PROC_DT_6, \
						VARCHAR_FORMAT(IV.PROC_DT_7, 'MM/DD/YYYY') AS PROC_DT_7, \
						VARCHAR_FORMAT(IV.PROC_DT_8, 'MM/DD/YYYY') AS PROC_DT_8, \
						VARCHAR_FORMAT(IV.PROC_DT_9, 'MM/DD/YYYY') AS PROC_DT_9, \
						VARCHAR_FORMAT(IV.PROC_DT_10, 'MM/DD/YYYY') AS PROC_DT_10, \
						VARCHAR_FORMAT(IV.PROC_DT_11, 'MM/DD/YYYY') AS PROC_DT_11, \
						VARCHAR_FORMAT(IV.PROC_DT_12, 'MM/DD/YYYY') AS PROC_DT_12, \
						VARCHAR_FORMAT(IV.PROC_DT_13, 'MM/DD/YYYY') AS PROC_DT_13, \
						VARCHAR_FORMAT(IV.PROC_DT_14, 'MM/DD/YYYY') AS PROC_DT_14, \
						VARCHAR_FORMAT(IV.PROC_DT_15, 'MM/DD/YYYY') AS PROC_DT_15, \
						VARCHAR_FORMAT(IV.PROC_DT_16, 'MM/DD/YYYY') AS PROC_DT_16, \
						VARCHAR_FORMAT(IV.PROC_DT_17, 'MM/DD/YYYY') AS PROC_DT_17, \
						VARCHAR_FORMAT(IV.PROC_DT_18, 'MM/DD/YYYY') AS PROC_DT_18, \
						VARCHAR_FORMAT(IV.PROC_DT_19, 'MM/DD/YYYY') AS PROC_DT_19, \
						VARCHAR_FORMAT(IV.PROC_DT_20, 'MM/DD/YYYY') AS PROC_DT_20, \
						VARCHAR_FORMAT(IV.PROC_DT_21, 'MM/DD/YYYY') AS PROC_DT_21, \
						VARCHAR_FORMAT(IV.PROC_DT_22, 'MM/DD/YYYY') AS PROC_DT_22, \
						VARCHAR_FORMAT(IV.PROC_DT_23, 'MM/DD/YYYY') AS PROC_DT_23, \
						VARCHAR_FORMAT(IV.PROC_DT_24, 'MM/DD/YYYY') AS PROC_DT_24, IV.ICD_10_PRINC_PROC_CD, \
						VARCHAR_FORMAT(IV.PRINC_PROC_DT, 'MM/DD/YYYY') AS PRINC_PROC_DT, IV.PRINC_DIAG_POA_CD, \
						IV.DIAG_POA_CD_1, IV.DIAG_POA_CD_2, IV.DIAG_POA_CD_3, IV.DIAG_POA_CD_4, IV.DIAG_POA_CD_5, \
						IV.DIAG_POA_CD_6, IV.DIAG_POA_CD_7, IV.DIAG_POA_CD_8, IV.DIAG_POA_CD_9, IV.DIAG_POA_CD_10, \
						IV.DIAG_POA_CD_11, IV.DIAG_POA_CD_12, IV.DIAG_POA_CD_13, IV.DIAG_POA_CD_14, IV.DIAG_POA_CD_15, \
						IV.DIAG_POA_CD_16, IV.DIAG_POA_CD_17, IV.DIAG_POA_CD_18, IV.DIAG_POA_CD_19, IV.DIAG_POA_CD_20, \
						IV.DIAG_POA_CD_21, IV.DIAG_POA_CD_22, IV.DIAG_POA_CD_23, IV.DIAG_POA_CD_24, IV.ICD_10_ADMIT_DIAG_CD, \
						IV.ICD_10_PRINC_DIAG_CD, IV.ICD_10_DIAG_CD_1, IV.ICD_10_DIAG_CD_2, IV.ICD_10_DIAG_CD_3, \
						IV.ICD_10_DIAG_CD_4, IV.ICD_10_DIAG_CD_5, IV.ICD_10_DIAG_CD_6, IV.ICD_10_DIAG_CD_7, \
						IV.ICD_10_DIAG_CD_8, IV.ICD_10_DIAG_CD_9, IV.ICD_10_DIAG_CD_10, IV.ICD_10_DIAG_CD_11, \
						IV.ICD_10_DIAG_CD_12, IV.ICD_10_DIAG_CD_13, IV.ICD_10_DIAG_CD_14, IV.ICD_10_DIAG_CD_15, \
						IV.ICD_10_DIAG_CD_16, IV.ICD_10_DIAG_CD_17, IV.ICD_10_DIAG_CD_18, IV.ICD_10_DIAG_CD_19, \
						IV.ICD_10_DIAG_CD_20, IV.ICD_10_DIAG_CD_21, IV.ICD_10_DIAG_CD_22, IV.ICD_10_DIAG_CD_23, \
						IV.ICD_10_DIAG_CD_24, IVL.LN_NUM, LPAD (IVL.HCPCS_PROC_CD, 5, '0') AS HCPCS_PROC_CD, \
						IVL.HCPCS_PROCMOD_CD_1, IVL.HCPCS_PROCMOD_CD_2, IVL.HCPCS_PROCMOD_CD_3, IVL.HCPCS_PROCMOD_CD_4, \
						IVL.SERV_NUM, VARCHAR_FORMAT(IVL.SERV_START_DT, 'MM/DD/YYYY') AS SERV_START_DT, IVL.SERV_CHG_AMT, \
						IVL.NDC_CD, IVL.REV_CD, \
						CASE WHEN IV.PERF_PROV_TXNMY_CD = '261QE0700X' THEN 'TRUE' \
						ELSE 'FALSE' \
						END AS DaVita \
						FROM\u0020
						
mappoFacilityMondayB = ITS.IPP_SF_INST_V IV,\u0020

mappoFacilityMondayC = ITS.IPP_SF_LN_INST_V IVL WHERE IV.SCCF_ID = IVL.SCCF_ID AND IV.BUS_OWNER_ID = IVL.BUS_OWNER_ID \
						AND IV.CLM_TP_CD = IVL.CLM_TP_CD AND IV.BUS_OWNER_ID = 'AR01' \
						AND IVL.REV_CD <> '0001' \
						AND ( IV.HOST_PLAN_RCPT_DT BETWEEN CURRENT_DATE - 7 DAY AND CURRENT_DATE - 1 DAY ) \
						AND ( ERR_CD_1 = '00MAP' OR ERR_CD_2 = '00MAP' OR ERR_CD_3 = '00MAP' OR ERR_CD_4 = '00MAP' \
						OR ERR_CD_5 = '00MAP' ) ORDER BY IV.HOST_PLAN_RCPT_DT ASC, IV.SCCF_ID, IVL.LN_NUM \
						FOR FETCH ONLY WITH UR
						
mappoProfOtherA = SELECT PV.SCCF_ID, \
					PV.BUS_OWNER_ID, PV.CLM_TP_CD, PV.HOST_PLAN_CNTL_ID, \
					PV.INP_SUB_ID, PV.TOT_CHG_AMT, PV.FED_TAX_ID, PV.PROV_ST_CD, \
					PV.PROV_ZIP_CD, PV.PROV_NPI_CD, PV.PAT_SEX_CD, \
					VARCHAR_FORMAT(PV.PAT_BRTH_DT, 'MM/DD/YYYY') AS PAT_BRTH_DT, VARCHAR_FORMAT(PV.SERV_DT, 'MM/DD/YYYY') \
					AS SERV_DT, PV.PERF_PROV_ZIP_CD, PV.PERF_PROV_NPI_CD, PV.AMB_PICKUP_ZIP_CD, PVL.LN_NUM, \
					LPAD (PVL.HCPCS_PROC_CD, 5, '0') AS HCPCS_PROC_CD, PVL.HCPCS_PROCMOD_CD_1, PVL.HCPCS_PROCMOD_CD_2, \
					PVL.HCPCS_PROCMOD_CD_3, PVL.HCPCS_PROCMOD_CD_4, \
					CASE WHEN PVL.SERV_NUM = '0' THEN CASE WHEN MOD((PVL.SERV_HR_NUM * 60 + PVL.SERV_MIN_NUM), 15) > 0 \
					THEN ((PVL.SERV_HR_NUM * 60 + PVL.SERV_MIN_NUM) / 15) + 1 \
					ELSE (PVL.SERV_HR_NUM * 60 + PVL.SERV_MIN_NUM) / 15 END ELSE \
					PVL.SERV_NUM END AS SERV_NUM, VARCHAR_FORMAT(PVL.SERV_START_DT, 'MM/DD/YYYY') \
					AS SERV_START_DT, PVL.SERV_CHG_AMT, PVL.NDC_CD, VARCHAR_FORMAT(PVL.SERV_END_DT, 'MM/DD/YYYY') \
					AS SERV_END_DT, PVL.PLACE_SERV_CD, CASE PVL.DIAG_CD_IND_1 WHEN '1' \
					THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 WHEN '3' \
					THEN PV.ICD_10_DIAG_CD_3 WHEN '4' THEN PV.ICD_10_DIAG_CD_4 WHEN '5' \
					THEN PV.ICD_10_DIAG_CD_5 WHEN '6' THEN PV.ICD_10_DIAG_CD_6 WHEN '7' THEN PV.ICD_10_DIAG_CD_7 \
					WHEN '8' THEN PV.ICD_10_DIAG_CD_8 WHEN '9' THEN PV.ICD_10_DIAG_CD_9 WHEN '10' THEN PV.ICD_10_DIAG_CD_10 \
					WHEN '11' THEN PV.ICD_10_DIAG_CD_11 WHEN '12' THEN PV.ICD_10_DIAG_CD_12 \
					WHEN '13' THEN PV.ICD_10_DIAG_CD_13 WHEN '14' THEN PV.ICD_10_DIAG_CD_14 WHEN '15' THEN PV.ICD_10_DIAG_CD_15 \
					WHEN '16' THEN PV.ICD_10_DIAG_CD_16 WHEN '17' THEN PV.ICD_10_DIAG_CD_17 \
					WHEN '18' THEN PV.ICD_10_DIAG_CD_18 WHEN '19' THEN PV.ICD_10_DIAG_CD_19 \
					WHEN '20' THEN PV.ICD_10_DIAG_CD_20 WHEN '21' THEN PV.ICD_10_DIAG_CD_21 \
					WHEN '22' THEN PV.ICD_10_DIAG_CD_22 WHEN '23' THEN PV.ICD_10_DIAG_CD_23 \
					WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_1, CASE PVL.DIAG_CD_IND_2 \
					WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 WHEN '3' THEN PV.ICD_10_DIAG_CD_3 \
					WHEN '4' THEN PV.ICD_10_DIAG_CD_4 WHEN '5' THEN PV.ICD_10_DIAG_CD_5 WHEN '6' THEN PV.ICD_10_DIAG_CD_6 \
					WHEN '7' THEN PV.ICD_10_DIAG_CD_7 WHEN '8' THEN PV.ICD_10_DIAG_CD_8 WHEN '9' THEN PV.ICD_10_DIAG_CD_9 \
					WHEN '10' THEN PV.ICD_10_DIAG_CD_10 WHEN '11' THEN PV.ICD_10_DIAG_CD_11 \
					WHEN '12' THEN PV.ICD_10_DIAG_CD_12 WHEN '13' THEN PV.ICD_10_DIAG_CD_13 \
					WHEN '14' THEN PV.ICD_10_DIAG_CD_14 WHEN '15' THEN PV.ICD_10_DIAG_CD_15 \
					WHEN '16' THEN PV.ICD_10_DIAG_CD_16 WHEN '17' THEN PV.ICD_10_DIAG_CD_17 \
					WHEN '18' THEN PV.ICD_10_DIAG_CD_18 WHEN '19' THEN PV.ICD_10_DIAG_CD_19 \
					WHEN '20' THEN PV.ICD_10_DIAG_CD_20 WHEN '21' THEN PV.ICD_10_DIAG_CD_21 \
					WHEN '22' THEN PV.ICD_10_DIAG_CD_22 WHEN '23' THEN PV.ICD_10_DIAG_CD_23 \
					WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_2, CASE PVL.DIAG_CD_IND_3 \
					WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 WHEN '3' THEN PV.ICD_10_DIAG_CD_3 \
					WHEN '4' THEN PV.ICD_10_DIAG_CD_4 WHEN '5' THEN PV.ICD_10_DIAG_CD_5 WHEN '6' THEN PV.ICD_10_DIAG_CD_6 \
					WHEN '7' THEN PV.ICD_10_DIAG_CD_7 WHEN '8' THEN PV.ICD_10_DIAG_CD_8 WHEN '9' THEN PV.ICD_10_DIAG_CD_9 \
					WHEN '10' THEN PV.ICD_10_DIAG_CD_10 WHEN '11' THEN PV.ICD_10_DIAG_CD_11 \
					WHEN '12' THEN PV.ICD_10_DIAG_CD_12 WHEN '13' THEN PV.ICD_10_DIAG_CD_13 \
					WHEN '14' THEN PV.ICD_10_DIAG_CD_14 WHEN '15' THEN PV.ICD_10_DIAG_CD_15 \
					WHEN '16' THEN PV.ICD_10_DIAG_CD_16 WHEN '17' THEN PV.ICD_10_DIAG_CD_17 \
					WHEN '18' THEN PV.ICD_10_DIAG_CD_18 WHEN '19' THEN PV.ICD_10_DIAG_CD_19 \
					WHEN '20' THEN PV.ICD_10_DIAG_CD_20 WHEN '21' THEN PV.ICD_10_DIAG_CD_21 \
					WHEN '22' THEN PV.ICD_10_DIAG_CD_22 WHEN '23' THEN PV.ICD_10_DIAG_CD_23 \
					WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_3, CASE PVL.DIAG_CD_IND_4 \
					WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 WHEN '3' THEN PV.ICD_10_DIAG_CD_3 \
					WHEN '4' THEN PV.ICD_10_DIAG_CD_4 WHEN '5' THEN PV.ICD_10_DIAG_CD_5 WHEN '6' THEN PV.ICD_10_DIAG_CD_6 \
					WHEN '7' THEN PV.ICD_10_DIAG_CD_7 WHEN '8' THEN PV.ICD_10_DIAG_CD_8 WHEN '9' THEN PV.ICD_10_DIAG_CD_9 \
					WHEN '10' THEN PV.ICD_10_DIAG_CD_10 WHEN '11' THEN PV.ICD_10_DIAG_CD_11 \
					WHEN '12' THEN PV.ICD_10_DIAG_CD_12 WHEN '13' THEN PV.ICD_10_DIAG_CD_13 \
					WHEN '14' THEN PV.ICD_10_DIAG_CD_14 WHEN '15' THEN PV.ICD_10_DIAG_CD_15 \
					WHEN '16' THEN PV.ICD_10_DIAG_CD_16 WHEN '17' THEN PV.ICD_10_DIAG_CD_17 \
					WHEN '18' THEN PV.ICD_10_DIAG_CD_18 WHEN '19' THEN PV.ICD_10_DIAG_CD_19 \
					WHEN '20' THEN PV.ICD_10_DIAG_CD_20 WHEN '21' THEN PV.ICD_10_DIAG_CD_21 \
					WHEN '22' THEN PV.ICD_10_DIAG_CD_22 WHEN '23' THEN PV.ICD_10_DIAG_CD_23 \
					WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_4, \
					LPAD (PS.SPEC_PDF_CODE, 2, '0') AS SPEC_PDF_CODE \
					FROM\u0020
					
mappoProfOtherB = ITS.IPP_SF_PROF_V PV,\u0020

mappoProfOtherC = ITS.IPP_SF_LN_PROF_V PVL,\u0020

mappoProfOtherD = .PRVALIAS PA,\u0020

mappoProfOtherE = .V_PRVSPCL PS \
					WHERE PV.SCCF_ID = PVL.SCCF_ID AND PV.BUS_OWNER_ID = PVL.BUS_OWNER_ID \
					AND PV.CLM_TP_CD = PVL.CLM_TP_CD AND PV.PERF_PROV_NPI_CD > '0' AND PV.BUS_OWNER_ID = 'AR01' \
					AND (PV.HOST_PLAN_RCPT_DT = CURRENT_DATE - 1 DAY) AND ( ERR_CD_1 = '00MAP' OR ERR_CD_2 = '00MAP' \
					OR ERR_CD_3 = '00MAP' OR ERR_CD_4 = '00MAP' OR ERR_CD_5 = '00MAP' ) \
					AND PV.PERF_PROV_NPI_CD = PA.PRVAL_AL_NBR AND PA.PRVAL_INTRL_NBR = PS.SPEC_INTRL_NBR \
					AND PA.PRVAL_TYPE_AL = 'NPI' AND PA.PRVAL_CURR_REC = 'C' AND PS.SPEC_TYPE = 'P' \
					AND PS.SPEC_CURR_REC = 'C' ORDER BY PV.HOST_PLAN_RCPT_DT ASC, PV.SCCF_ID, PVL.LN_NUM \
					FOR FETCH ONLY WITH UR

mappoProfMondayA = SELECT PV.SCCF_ID, PV.BUS_OWNER_ID, PV.CLM_TP_CD, PV.HOST_PLAN_CNTL_ID, PV.INP_SUB_ID, PV.TOT_CHG_AMT, \
					PV.FED_TAX_ID, PV.PROV_ST_CD, PV.PROV_ZIP_CD, PV.PROV_NPI_CD, PV.PAT_SEX_CD, \
					VARCHAR_FORMAT(PV.PAT_BRTH_DT, 'MM/DD/YYYY') AS PAT_BRTH_DT, \
					VARCHAR_FORMAT(PV.SERV_DT, 'MM/DD/YYYY') AS SERV_DT, PV.PERF_PROV_ZIP_CD, PV.PERF_PROV_NPI_CD, \
					PV.AMB_PICKUP_ZIP_CD, PVL.LN_NUM, LPAD (PVL.HCPCS_PROC_CD, 5, '0') AS HCPCS_PROC_CD, \
					PVL.HCPCS_PROCMOD_CD_1, PVL.HCPCS_PROCMOD_CD_2, PVL.HCPCS_PROCMOD_CD_3, PVL.HCPCS_PROCMOD_CD_4, \
					CASE WHEN PVL.SERV_NUM = '0' THEN CASE WHEN MOD((PVL.SERV_HR_NUM * 60 + PVL.SERV_MIN_NUM), 15) > 0 \
					THEN ((PVL.SERV_HR_NUM * 60 + PVL.SERV_MIN_NUM) / 15) + 1 \
					ELSE (PVL.SERV_HR_NUM * 60 + PVL.SERV_MIN_NUM) / 15 END ELSE PVL.SERV_NUM END AS SERV_NUM, \
					VARCHAR_FORMAT(PVL.SERV_START_DT, 'MM/DD/YYYY') AS SERV_START_DT, PVL.SERV_CHG_AMT, PVL.NDC_CD, \
					VARCHAR_FORMAT(PVL.SERV_END_DT, 'MM/DD/YYYY') AS SERV_END_DT, PVL.PLACE_SERV_CD, \
					CASE PVL.DIAG_CD_IND_1 WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 \
					WHEN '3' THEN PV.ICD_10_DIAG_CD_3 WHEN '4' THEN PV.ICD_10_DIAG_CD_4 WHEN '5' THEN PV.ICD_10_DIAG_CD_5 \
					WHEN '6' THEN PV.ICD_10_DIAG_CD_6 WHEN '7' THEN PV.ICD_10_DIAG_CD_7 WHEN '8' THEN PV.ICD_10_DIAG_CD_8 \
					WHEN '9' THEN PV.ICD_10_DIAG_CD_9 WHEN '10' THEN PV.ICD_10_DIAG_CD_10 WHEN '11' \
					THEN PV.ICD_10_DIAG_CD_11 WHEN '12' THEN PV.ICD_10_DIAG_CD_12 WHEN '13' THEN PV.ICD_10_DIAG_CD_13 \
					WHEN '14' THEN PV.ICD_10_DIAG_CD_14 WHEN '15' THEN PV.ICD_10_DIAG_CD_15 \
					WHEN '16' THEN PV.ICD_10_DIAG_CD_16 WHEN '17' THEN PV.ICD_10_DIAG_CD_17 \
					WHEN '18' THEN PV.ICD_10_DIAG_CD_18 WHEN '19' THEN PV.ICD_10_DIAG_CD_19 \
					WHEN '20' THEN PV.ICD_10_DIAG_CD_20 WHEN '21' THEN PV.ICD_10_DIAG_CD_21 \
					WHEN '22' THEN PV.ICD_10_DIAG_CD_22 WHEN '23' THEN PV.ICD_10_DIAG_CD_23 \
					WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_1, CASE PVL.DIAG_CD_IND_2 \
					WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 \
					WHEN '3' THEN PV.ICD_10_DIAG_CD_3 WHEN '4' THEN PV.ICD_10_DIAG_CD_4 WHEN '5' THEN PV.ICD_10_DIAG_CD_5 \
					WHEN '6' THEN PV.ICD_10_DIAG_CD_6 WHEN '7' THEN PV.ICD_10_DIAG_CD_7 WHEN '8' THEN PV.ICD_10_DIAG_CD_8 \
					WHEN '9' THEN PV.ICD_10_DIAG_CD_9 WHEN '10' THEN PV.ICD_10_DIAG_CD_10 \
					WHEN '11' THEN PV.ICD_10_DIAG_CD_11 WHEN '12' THEN PV.ICD_10_DIAG_CD_12 \
					WHEN '13' THEN PV.ICD_10_DIAG_CD_13 WHEN '14' THEN PV.ICD_10_DIAG_CD_14 \
					WHEN '15' THEN PV.ICD_10_DIAG_CD_15 WHEN '16' THEN PV.ICD_10_DIAG_CD_16 \
					WHEN '17' THEN PV.ICD_10_DIAG_CD_17 WHEN '18' THEN PV.ICD_10_DIAG_CD_18 \
					WHEN '19' THEN PV.ICD_10_DIAG_CD_19 WHEN '20' THEN PV.ICD_10_DIAG_CD_20 \
					WHEN '21' THEN PV.ICD_10_DIAG_CD_21 WHEN '22' THEN PV.ICD_10_DIAG_CD_22 \
					WHEN '23' THEN PV.ICD_10_DIAG_CD_23 WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_2, \
					CASE PVL.DIAG_CD_IND_3 WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 \
					WHEN '3' THEN PV.ICD_10_DIAG_CD_3 WHEN '4' THEN PV.ICD_10_DIAG_CD_4 \
					WHEN '5' THEN PV.ICD_10_DIAG_CD_5 WHEN '6' THEN PV.ICD_10_DIAG_CD_6 \
					WHEN '7' THEN PV.ICD_10_DIAG_CD_7 WHEN '8' THEN PV.ICD_10_DIAG_CD_8 \
					WHEN '9' THEN PV.ICD_10_DIAG_CD_9 WHEN '10' THEN PV.ICD_10_DIAG_CD_10 \
					WHEN '11' THEN PV.ICD_10_DIAG_CD_11 WHEN '12' THEN PV.ICD_10_DIAG_CD_12 \
					WHEN '13' THEN PV.ICD_10_DIAG_CD_13 WHEN '14' THEN PV.ICD_10_DIAG_CD_14 \
					WHEN '15' THEN PV.ICD_10_DIAG_CD_15 WHEN '16' THEN PV.ICD_10_DIAG_CD_16 \
					WHEN '17' THEN PV.ICD_10_DIAG_CD_17 WHEN '18' THEN PV.ICD_10_DIAG_CD_18 \
					WHEN '19' THEN PV.ICD_10_DIAG_CD_19 WHEN '20' THEN PV.ICD_10_DIAG_CD_20 \
					WHEN '21' THEN PV.ICD_10_DIAG_CD_21 WHEN '22' THEN PV.ICD_10_DIAG_CD_22 \
					WHEN '23' THEN PV.ICD_10_DIAG_CD_23 WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_3, \
					CASE PVL.DIAG_CD_IND_4 WHEN '1' THEN PV.ICD_10_DIAG_CD_1 WHEN '2' THEN PV.ICD_10_DIAG_CD_2 \
					WHEN '3' THEN PV.ICD_10_DIAG_CD_3 WHEN '4' THEN PV.ICD_10_DIAG_CD_4 \
					WHEN '5' THEN PV.ICD_10_DIAG_CD_5 WHEN '6' THEN PV.ICD_10_DIAG_CD_6 WHEN '7' THEN PV.ICD_10_DIAG_CD_7 \
					WHEN '8' THEN PV.ICD_10_DIAG_CD_8 WHEN '9' THEN PV.ICD_10_DIAG_CD_9 \
					WHEN '10' THEN PV.ICD_10_DIAG_CD_10 WHEN '11' THEN PV.ICD_10_DIAG_CD_11 \
					WHEN '12' THEN PV.ICD_10_DIAG_CD_12 WHEN '13' THEN PV.ICD_10_DIAG_CD_13 \
					WHEN '14' THEN PV.ICD_10_DIAG_CD_14 WHEN '15' THEN PV.ICD_10_DIAG_CD_15 \
					WHEN '16' THEN PV.ICD_10_DIAG_CD_16 WHEN '17' THEN PV.ICD_10_DIAG_CD_17 \
					WHEN '18' THEN PV.ICD_10_DIAG_CD_18 WHEN '19' THEN PV.ICD_10_DIAG_CD_19 \
					WHEN '20' THEN PV.ICD_10_DIAG_CD_20 WHEN '21' THEN PV.ICD_10_DIAG_CD_21 \
					WHEN '22' THEN PV.ICD_10_DIAG_CD_22 WHEN '23' THEN PV.ICD_10_DIAG_CD_23 \
					WHEN '24' THEN PV.ICD_10_DIAG_CD_24 END as DIAG_CD_4, \
					LPAD (PS.SPEC_PDF_CODE, 2, '0') AS SPEC_PDF_CODE \
					FROM \u0020
						
mappoProfMondayB = ITS.IPP_SF_PROF_V PV,\u0020

mappoProfMondayC = ITS.IPP_SF_LN_PROF_V PVL,\u0020

mappoProfMondayD = .PRVALIAS PA, \u0020

mappoProfMondayE = .V_PRVSPCL PS WHERE PV.SCCF_ID = PVL.SCCF_ID \
					AND PV.BUS_OWNER_ID = PVL.BUS_OWNER_ID AND PV.CLM_TP_CD = PVL.CLM_TP_CD AND PV.PERF_PROV_NPI_CD > '0' \
					AND PV.BUS_OWNER_ID = 'AR01' AND ( PV.HOST_PLAN_RCPT_DT BETWEEN CURRENT_DATE - 7 DAY AND CURRENT_DATE - 1 DAY ) \
					AND ( ERR_CD_1 = '00MAP' OR ERR_CD_2 = '00MAP' OR ERR_CD_3 = '00MAP' OR ERR_CD_4 = '00MAP' OR ERR_CD_5 = '00MAP' ) \
					AND PV.PERF_PROV_NPI_CD = PA.PRVAL_AL_NBR AND PA.PRVAL_INTRL_NBR = PS.SPEC_INTRL_NBR AND PA.PRVAL_TYPE_AL = 'NPI' \
					AND PA.PRVAL_CURR_REC = 'C' AND PS.SPEC_TYPE = 'P' AND PS.SPEC_CURR_REC = 'C' \
					ORDER BY PV.HOST_PLAN_RCPT_DT ASC, PV.SCCF_ID, PVL.LN_NUM \
					FOR FETCH ONLY WITH UR
					
baaQuery = With Base_Query as (select distinct c.claim_nbr, \
			CASE WHEN SUBSTR(c.claim_nbr,7,1) IN ('E','5') THEN 'ITS' \
			ELSE 'Instate' END AS TYPE, s.ex_array, \
			(select nvl (max(substr(subscr_id,1,3)), 'NOV') from v_claimi v2 where v2.claim_nbr = c.claim_nbr) as PREFIX \
			from service_x s, claim c where (SUBSTR(s.EX_ARRAY, 1, 2) IN ('DT', 'K6', '6L') \
			OR SUBSTR(s.EX_ARRAY, 3, 2) IN ('DT', 'K6', '6L') OR SUBSTR(s.EX_ARRAY, 5, 2) IN ('DT', 'K6', '6L') \
			OR SUBSTR(s.EX_ARRAY, 7, 2) IN ('DT', 'K6', '6L') OR SUBSTR(s.EX_ARRAY, 9, 2) IN ('DT', 'K6', '6L') \
 			OR SUBSTR(s.EX_ARRAY, 11, 2) IN ('DT', 'K6', '6L')) and c.claim_nbr = s.claim_nbr \
			and c.paid <> 'A_' \
			and c.resolution between '30' and '49' \
			and not exists (select 1 from ub u where u.ub_frq = '8' and u.CLAIM_NBR = s.CLAIM_NBR) \
			and not exists (select 1 from service_x s2 \
			where (SUBSTR(s2.EX_ARRAY, 1, 2) = ('2J') \
			or SUBSTR(s2.EX_ARRAY, 3, 2) = ('2J') \
			or SUBSTR(s2.EX_ARRAY, 5, 2) = ('2J') \
			or SUBSTR(s2.EX_ARRAY, 7, 2) = ('2J') \
			or SUBSTR(s2.EX_ARRAY, 9, 2) = ('2J') \
			or SUBSTR(s2.EX_ARRAY, 11, 2) = ('2J')) \
			and s2.claim_nbr = c.claim_nbr)) \
			SELECT B.*, \
			CASE WHEN INSTR(EX_ARRAY,'DT') > 0 THEN 'DT' \
			WHEN INSTR(EX_ARRAY,'K6') > 0 THEN 'K6' \
			WHEN INSTR(EX_ARRAY,'6L') > 0 THEN '6L' \
			ELSE 'CHECK' \
			END AS PROCESS \
			FROM Base_Query B \
			Where PREFIX IN ('TYG','TOC','TZT','TNN','FWP','FWT','W2K','W2N','WDD','WEO','WES','WHM','WMJ','WMW','WNK','WOJ','WPA','WPS','WSA','WTO','WVO','WYR','NOV') \
			and SUBSTR(claim_nbr,8,1) NOT IN ('A','B','C','D','E','F','G','H','I','J','K','L','X','Y','Z') \
			and SUBSTR(claim_nbr,7,1) NOT IN ('J','F','G','L','E','S','4') \
			and SUBSTR(claim_nbr,7,2) NOT IN ('OM','WM','MW','WW','OT') \
			and SUBSTR(EX_ARRAY,1,2) NOT IN ('1W','1Y','a1','A4','c1','cz','Dm','f0','FM','FN','ir','JG','K1','K2','kj','LC','MN','nf','NK','P5','QE','sd','U7') \
			and SUBSTR(EX_ARRAY,3,2) NOT IN ('1W','1Y','a1','A4','c1','cz','Dm','f0','FM','FN','ir','JG','K1','K2','kj','LC','MN','nf','NK','P5','QE','sd','U7') \
			and SUBSTR(EX_ARRAY,5,2) NOT IN ('1W','1Y','a1','A4','c1','cz','Dm','f0','FM','FN','ir','JG','K1','K2','kj','LC','MN','nf','NK','P5','QE','sd','U7') \
			and SUBSTR(EX_ARRAY,7,2) NOT IN ('1W','1Y','a1','A4','c1','cz','Dm','f0','FM','FN','ir','JG','K1','K2','kj','LC','MN','nf','NK','P5','QE','sd','U7') \
			and SUBSTR(EX_ARRAY,9,2) NOT IN ('1W','1Y','a1','A4','c1','cz','Dm','f0','FM','FN','ir','JG','K1','K2','kj','LC','MN','nf','NK','P5','QE','sd','U7') \
			and SUBSTR(EX_ARRAY,11,2) NOT IN ('1W','1Y','a1','A4','c1','cz','Dm','f0','FM','FN','ir','JG','K1','K2','kj','LC','MN','nf','NK','P5','QE','sd','U7') \
			and not exists (select * from v_claimi v where b.type = 'ITS' \
			and (v.clm_sf_msg_code_1 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U600','U601','U602','U604') \
			or v.clm_sf_msg_code_2 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U600','U601','U602','U604') \
			or v.clm_sf_msg_code_3 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U600','U601','U602','U604') \
			or v.clm_sf_msg_code_4 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U600','U601','U602','U604') \
			or v.clm_sf_msg_code_5 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U600','U601','U602','U604')) \
			and b.claim_nbr = v.claim_nbr) \
			and (EX_ARRAY NOT LIKE '%DT%' or PREFIX NOT IN ('TYG', 'TOC', 'TZT', 'TNN')) \
			ORDER BY PROCESS
			
hvaModernA = SELECT \
			MV.PRCSG_SITE_CNTL_ID AS ORIG_CLM \
			, MV.SCCF_ID AS ORIG_SCCF \
			, RV.TOT_PMT_AMT AS ORIG_PAID \
			, SV.PRCSG_SITE_CNTL_ID AS CORR_CLM \
			, SV.SCCF_ID AS CORR_SCCF \
			, VARCHAR_FORMAT(RV.PAID_DT,'MM/DD/YYYY')AS PAID_DATE \
			, VARCHAR_FORMAT(MV.CRT_TS,'MM/DD/YYYY')AS RECEIVE_DATE \
			, RV.SUB_APFX_ID AS PREFIX \
			, MV.RSN_CD \
			, MV.ROOT_MSG_ID \
			, COUNT(CLMLINE.SCCF_ID) AS LineCount \
			, CASE WHEN MV.RSN_CD IN ('208', '209', '220', '222', '275') THEN 'TRUE' \
			WHEN SV.SUBM_MSG_CD_1 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U290','U291','U292','U293','U294','U295','U296','U600','U601','U602','U604','U956') \
			OR SV.SUBM_MSG_CD_2 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U290','U291','U292','U293','U294','U295','U296','U600','U601','U602','U604','U956') \
			OR SV.SUBM_MSG_CD_3 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U290','U291','U292','U293','U294','U295','U296','U600','U601','U602','U604','U956') \
			OR SV.SUBM_MSG_CD_4 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U290','U291','U292','U293','U294','U295','U296','U600','U601','U602','U604','U956') \
			OR SV.SUBM_MSG_CD_5 IN ('1022','1023','1024','1103','1104','1105','1106','1108','U290','U291','U292','U293','U294','U295','U296','U600','U601','U602','U604','U956') THEN 'TRUE' \
			WHEN RV.TOT_PMT_AMT > 25000 THEN 'TRUE' \
			WHEN SUBSTR(MV.PRCSG_SITE_CNTL_ID,7,1) = 'E' THEN 'TRUE' \
			WHEN SV.CLM_TP_CD = '11' THEN 'TRUE' \
			ELSE 'FALSE' \
		END AS EXCLUDE FROM \u0020
hvaModernB = ITS.IPP_MSG_SEARCH MV, \u0020
hvaModernC = ITS.CLM_SUBM SV, \u0020
hvaModernD = ITS.CLM_RECON RV, \u0020
hvaModernE = ITS.CLM_LN CLMLINE \
		WHERE SV.XREF_SCCF_ID = MV.SCCF_ID \
			AND SV.XREF_SCCF_ID = CLMLINE.SCCF_ID \
			AND RV.BUS_OWNER_ID = MV.BUS_OWNER_ID \
			AND RV.BUS_OWNER_ID = CLMLINE.BUS_OWNER_ID \
			AND RV.SCCF_ID = MV.SCCF_ID \
			AND RV.BUS_OWNER_ID = '0001' \
			AND MV.OPEN_CLOSE_IND = '1' \
			AND MV.RSN_CD IN ('208','209','220','222','246','273','274','275','276') \
			AND (RV.PAID_DT < CURRENT_DATE - 10 DAY) \
			AND RV.SUB_APFX_ID IN ('FWT','WDD','W2N','WWM','WEO','WHM','WSA','FWP','WMW','WTO','WYR','W2K','WPA','WPS','WOJ','WVO','WMJ','WES','WNK','TYG','TOC','TZT','TNN') GROUP BY MV.PRCSG_SITE_CNTL_ID, MV.SCCF_ID, RV.TOT_PMT_AMT, SV.PRCSG_SITE_CNTL_ID, SV.SCCF_ID, RV.PAID_DT, MV.CRT_TS, RV.SUB_APFX_ID, RV.SUB_SUFX_ID, MV.RSN_CD, SV.SUBM_MSG_CD_1, SV.SUBM_MSG_CD_2, SV.SUBM_MSG_CD_3, SV.SUBM_MSG_CD_4, SV.SUBM_MSG_CD_5, RV.TOT_PMT_AMT, MV.PRCSG_SITE_CNTL_ID, SV.CLM_TP_CD, MV.ROOT_MSG_ID \
		ORDER BY MV.CRT_TS, MV.PRCSG_SITE_CNTL_ID, MV.SCCF_ID, RV.TOT_PMT_AMT, SV.PRCSG_SITE_CNTL_ID, SV.SCCF_ID, RV.PAID_DT, RV.SUB_APFX_ID, RV.SUB_SUFX_ID, MV.RSN_CD, MV.ROOT_MSG_ID
		
		
m2A = 	create global temporary table M2Temp ( \
			claim_nbr   char(12), \
			member_nbr  char(12), \
			record_nbr  char(12) \
			)on commit preserve rows
m2B = insert into M2Temp(claim_nbr, member_nbr, record_nbr) \
		  (select claim_nbr,member_nbr,record_nbr from claim ci \
		  where substr(ci.claim_nbr, 7, 1) in ('5') \
		  and substr(ci.CLAIM_NBR, 8, 1) not in ('A') \
		  and ci.paid in ('IY','NY') \
		  and ci.resolution <> '10' \
		  and ci.record_nbr = ' ')
m2C = select distinct c.claim_nbr \
		, sx.claim_type \
		, sx.member_nbr \
		, sx.paid \
		, sx.carrier \
		, sx.status_x \
		, CASE WHEN (select sum(amtallow_b) from service_x where claim_nbr = c.claim_nbr) > 2499900 THEN 'TRUE' \
		    ELSE 'FALSE' \
		  END AS DOLLAR_TOLERANCE \
		, (select count(*) from service_x where claim_nbr = c.claim_nbr and substr(serv_nbr, 15, 2) = '00') as NUM_SERVICES \
		from service_x sx, M2Temp c, claimi ci, servicei si, contract_recv cr \
		where c.claim_nbr = sx.claim_nbr \
		and sx.ymdrcvd >= to_number(to_char(sysdate - 365, 'YYYYMMDD')) \
		and sx.ymdpaid >= to_number(to_char(sysdate - 365, 'YYYYMMDD')) \
		and sx.ymdpaid <= to_number(to_char(sysdate - 10, 'YYYYMMDD')) \
		and substr(sx.member_nbr,1,9) = rtrim(cr.contract_nbr) \
		and c.claim_nbr = ci.claim_nbr \
		and c.claim_nbr = si.claim_nbr \
		and (SUBSTR(sx.EX_ARRAY,1,2) IN ('M2') \
		              OR SUBSTR(sx.EX_ARRAY,3,2) IN ('M2') \
		              OR SUBSTR(sx.EX_ARRAY,5,2) IN ('M2') \
		              OR SUBSTR(sx.EX_ARRAY,7,2) IN ('M2') \
		              OR SUBSTR(sx.EX_ARRAY,9,2) IN ('M2') \
		              OR SUBSTR(sx.EX_ARRAY,11,2) IN ('M2')) \
		and sx.claim_type = 'M' \
		and sx.paid = ('NY') \
		and sx.ymdeff <= cr.ymdpaidthru \
		and sx.status_x in('50', '51', '53') \
		and c.claim_nbr not in (select ci.claim_nbr from claimi ci where ci.clm_sf_msg_code_1 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or ci.clm_sf_msg_code_2 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or ci.clm_sf_msg_code_3 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or ci.clm_sf_msg_code_4 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or ci.clm_sf_msg_code_5 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956')) \
		and c.claim_nbr not in (select si.claim_nbr from servicei si where si.srv_sf_msg_code1 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or si.srv_sf_msg_code2 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or si.srv_sf_msg_code3 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or si.srv_sf_msg_code4 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
		                                or si.srv_sf_msg_code5 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956')) \
		and \
		( \
		  (substr(sx.serv_nbr, 15, 2) in \
		  (select max(substr(sx2.serv_nbr, 15, 2)) \
		  from service_x sx2 \
		  where sx2.claim_nbr = c.claim_nbr \
		  and substr(sx.serv_nbr, 1, 14) = substr(sx2.serv_nbr, 1, 14) \
		  and sx2.claim_nbr = sx.claim_nbr) \
		))
m2Check = declare \
   c int; \
begin \
   select count(*) into c from user_tables where table_name = upper('M2Temp'); \
   if c = 1 then \
      execute immediate 'drop table M2Temp'; \
   end if; \
end; 
CovidA = create global temporary table covid19_banaits (\
                        claim_nbr   char(12),\
                        serv_nbr    char(16),\
                        member_nbr  char(12),\
                        ymdeff      number(8),\
                        carrier     char(2),\
                        claim_type  char(1),\
                        prefix char(3)\
                        )on commit preserve rows
CovidB = insert into covid19_banaits (claim_nbr, serv_nbr, member_nbr, ymdeff, carrier, claim_type, prefix) \
                        (select sx.claim_nbr,sx.serv_nbr,sx.member_nbr,sx.ymdeff,sx.carrier,sx.claim_type, \
                        (select nvl (max(substr(subscr_id,1,3)), 'NOV') from v_claimi v2 where v2.claim_nbr = sx.claim_nbr) as PREFIX \
                        from service_x sx \
                        where sx.status_x in ('10','11','12') \
                        and sx.ymdrcvd >= to_number(to_char(sysdate - 365, 'YYYYMMDD')) \
                        and sx.ymdpaid <= to_number(to_char(sysdate - 10, 'YYYYMMDD')) \
                        and sx.ymdtrans <= to_number(to_char(sysdate - 10, 'YYYYMMDD')) \
						and sx.ymdeff <= 20231231 \
                        and sx.proc_nbr in ('U0001','U0002','U0003','U0004','U0005','86408','86409','87635','87636','87426','87428','87637','87811','0240U','0241U','0223U','0224U','86769','86328'))
CovidC = create global temporary table costsharecovid19 (\
                        claim_nbr   char(12), \
                        serv_nbr    char(16), \
                        member_nbr  char(12), \
                        ymdeff      number(8), \
                        carrier     char(2), \
                        claim_type  char(1),\
                        prefix char(3)\
                        )on commit preserve rows 
CovidD = insert into costsharecovid19 (claim_nbr, serv_nbr, member_nbr, ymdeff, carrier, claim_type, prefix) \
                        (select sx.claim_nbr,sx.serv_nbr,sx.member_nbr,sx.ymdeff,sx.carrier,sx.claim_type, \
                        (select nvl (max(substr(subscr_id,1,3)), 'NOV') from v_claimi v2 where v2.claim_nbr = sx.claim_nbr) as PREFIX \
                        from service_x sx, covid19_banaits c19 where (sx.member_nbr = c19.member_nbr and sx.ymdeff = c19.ymdeff) \
                        and (sx.location in ('11','17','20','72','50','71','49','03','02','60')) \
                        and sx.ymdrcvd >= to_number(to_char(sysdate - 365, 'YYYYMMDD')) \
                        and sx.ymdpaid <= to_number(to_char(sysdate - 10, 'YYYYMMDD')) \
						and sx.ymdtrans <= to_number(to_char(sysdate - 10, 'YYYYMMDD')) \
						and sx.ymdeff <= 20231231 \
                        and (sx.amtdeduct > 0 or sx.amtcoins > 0 or sx.amtcopay > 0) \
                        and ((substr(sx.serv_nbr, 15, 2) in (select max(substr(sx2.serv_nbr, 15, 2)) from service_x sx2 \
                        where substr(sx.serv_nbr, 1, 14) = substr(sx2.serv_nbr, 1, 14) and sx2.claim_nbr = sx.claim_nbr)))) 
CovidE = select distinct ct.claim_nbr, c.claim_type, c.paid, ct.member_nbr, ct.carrier, ct.prefix, \
                        CASE WHEN (select sum(amtallow_b) from service_x where claim_nbr = c.claim_nbr) > 2499900 THEN 'TRUE' \
                            ELSE 'FALSE' \
                          END AS DOLLAR_TOLERANCE, \
                        (select count(*) from service_x where claim_nbr = c.claim_nbr and substr(serv_nbr, 15, 2) = '00') as NUM_SERVICES \
                        from costsharecovid19 ct, claim c \
                        where ct.claim_nbr = c.claim_nbr \
                         and ct.prefix in ('WMW','WTO', 'WYR', 'W2K', 'WPA', 'WPS', 'WOJ', 'WVO', 'WMJ', 'WES', 'WNK', 'FWT', 'WAS', 'WDD', 'W2N', 'WWM', 'WEO', 'WHM', 'WSA', 'FWP', 'WSE') \
                        and c.paid in ('IY','NY') \
                        and c.record_nbr = ' ' \
                        and substr(ct.claim_nbr, 7, 1) in ('5') \
                        and substr(ct.claim_nbr, 8, 1) not in ('A') \
                        and ct.claim_nbr not in (select substr(remark_cat,1,12) from remark_summary where substr(remark_cat,25,2) = 'CV') \
                        and ct.claim_nbr not in (select clxref_nbr from clxref) \
                        and ct.claim_nbr not in (select ci.claim_nbr from claimi ci where ci.clm_sf_msg_code_1 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
                                or ci.clm_sf_msg_code_2 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
                                or ci.clm_sf_msg_code_3 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
                                or ci.clm_sf_msg_code_4 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
                                or ci.clm_sf_msg_code_5 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956')) \
                        and ct.claim_nbr not in (select si.claim_nbr from servicei si where si.srv_sf_msg_code1 in ('U280','U250') \
                                or si.srv_sf_msg_code2 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
                                or si.srv_sf_msg_code3 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956') \
                                or si.srv_sf_msg_code4 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956')  \
                                or si.srv_sf_msg_code5 in ('1022', '1023', '1024', '1103', '1104', '1105', '1106', '1108','U280','U250','U600','U601','U602', 'U604', 'U956')) \
                        order by claim_nbr desc
CovidTempTablesCheck = declare \
   c int; \
   d int; \
begin \
   select count(*) into c from user_tables where table_name = upper('covid19_banaits'); \
   select count(*) into d from user_tables where table_name = upper('costsharecovid19'); \
   if c = 1 then \
   	  execute immediate 'truncate table covid19_banaits'; \
      execute immediate 'drop table covid19_banaits'; \
   end if; \
      if d = 1 then \
   	  execute immediate 'truncate table costsharecovid19'; \
      execute immediate 'drop table costsharecovid19'; \
   end if; \
end; 

